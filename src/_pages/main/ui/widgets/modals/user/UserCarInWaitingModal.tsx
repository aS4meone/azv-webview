import { Button } from "@/shared/ui";
import React, { useState, useEffect } from "react";
import { CarImageCarousel, CarInfoHeader, CarSpecs } from "../ui";
import { ResponseBottomModalProps } from "@/shared/ui/modal";
import { rentApi } from "@/shared/api/routes/rent";
import InfoIcon from "@/shared/icons/ui/InfoIcon";
import { IUser } from "@/shared/models/types/user";
import { WaitingTimer } from "../../timers/WaitingTimer";
import { useUserStore } from "@/shared/stores/userStore";
import { useVehiclesStore } from "@/shared/stores/vechiclesStore";
import { UserRole } from "@/shared/models/types/user";
import { UploadPhotoClient as UploadPhoto } from "@/widgets/upload-photo/UploadPhotoClient";
import {
  userConfigStep1,
  userConfigStep2,
  ownerConfigStep1,
  ownerConfigStep2,
  usePhotoUpload,
} from "@/shared/contexts/PhotoUploadContext";
import { CustomResponseModal } from "@/components/ui/custom-response-modal";
import { useTranslations } from "next-intl";
import { vehicleActionsApi } from "@/shared/api/routes/vehicles";

interface UserCarInWaitingModalProps {
  user: IUser;
  onClose: () => void;
}

export const UserCarInWaitingModal = ({
  user,
  onClose,
}: UserCarInWaitingModalProps) => {
  const t = useTranslations();
  const [showUploadPhoto, setShowUploadPhoto] = useState(false);
  const [showUploadPhotoStep2, setShowUploadPhotoStep2] = useState(false);
  const [showOwnerUploadPhoto, setShowOwnerUploadPhoto] = useState(false);
  const [showOwnerUploadPhotoStep2, setShowOwnerUploadPhotoStep2] = useState(false);
  const { refreshUser } = useUserStore();
  const { allVehicles, allMechanicVehicles, fetchAllVehicles, fetchAllMechanicVehicles } = useVehiclesStore();
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const refreshVehiclesData = async () => {
    if (user.role === UserRole.MECHANIC) {
      await fetchAllMechanicVehicles();
    } else {
      await fetchAllVehicles();
    }
  };
  const [isLoading, setIsLoading] = useState(false);
  
  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –º–∞—à–∏–Ω—ã –∏–∑ vehicles store (—Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ API)
  // –î–ª—è –º–µ—Ö–∞–Ω–∏–∫–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º allMechanicVehicles, –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π - allVehicles
  const vehiclesData = user.role === UserRole.MECHANIC ? allMechanicVehicles : allVehicles;
  const car = vehiclesData.find(v => v.current_renter_id === user.id) || user.current_rental!.car_details;
  const { setUploadRequired } = usePhotoUpload();
  const [responseModal, setResponseModal] =
    useState<ResponseBottomModalProps | null>(null);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  useEffect(() => {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª—è –∏–∑ API –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    const hasSelfie = car.photo_before_selfie_uploaded || false;
    const hasCarPhotos = car.photo_before_car_uploaded || false;
    const hasInteriorPhotos = car.photo_before_interior_uploaded || false;
    
    // –ï—Å–ª–∏ –≤—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –∑–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –º–æ–¥–∞–ª—ã –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    if (hasSelfie && hasCarPhotos && hasInteriorPhotos) {
      setShowUploadPhoto(false);
      setShowUploadPhotoStep2(false);
      setShowOwnerUploadPhoto(false);
      setShowOwnerUploadPhotoStep2(false);
    }
    // –ú–æ–¥–∞–ª—ã –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Ç–µ–ø–µ—Ä—å –æ—Ç–∫—Ä—ã–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ –∫–Ω–æ–ø–∫–µ, –∞ –Ω–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
  }, [car.photo_before_selfie_uploaded, car.photo_before_car_uploaded, car.photo_before_interior_uploaded, car.owned_car]);

  const handleClose = async () => {
    await refreshUser();
    setResponseModal(null);
    onClose();
  };

  async function handleOpenCar() {
    // –°–Ω–∞—á–∞–ª–∞ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –º–∞—à–∏–Ω –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Ñ–ª–∞–≥–æ–≤
    await Promise.all([refreshUser(), refreshVehiclesData()]);
    
    // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –º–∞—à–∏–Ω—ã
    const updatedVehiclesData = user.role === UserRole.MECHANIC ? allMechanicVehicles : allVehicles;
    const updatedCar = updatedVehiclesData.find(v => v.current_renter_id === user.id) || user.current_rental!.car_details;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –∞–≤—Ç–æ–º–æ–±–∏–ª—è
    const isOwner = updatedCar.owner_id === user.id;
    
    // üîç DEBUG: –í—ã–≤–æ–¥–∏–º –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    console.log("--- DEBUG: User Car In Waiting - handleOpenCar clicked ---");
    console.log("updatedCar.owner_id:", updatedCar.owner_id);
    console.log("user.id:", user.id);
    console.log("isOwner:", isOwner);
    console.log("updatedCar.photo_before_selfie_uploaded:", updatedCar.photo_before_selfie_uploaded);
    console.log("updatedCar.photo_before_car_uploaded:", updatedCar.photo_before_car_uploaded);
    console.log("updatedCar.photo_before_interior_uploaded:", updatedCar.photo_before_interior_uploaded);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –ø–æ –Ω–æ–≤—ã–º –ø–æ–ª—è–º –∏–∑ API
    const hasSelfie = updatedCar.photo_before_selfie_uploaded || false;
    const hasCarPhotos = updatedCar.photo_before_car_uploaded || false;
    const hasInteriorPhotos = updatedCar.photo_before_interior_uploaded || false;
    
    console.log("üîç DEBUG: hasSelfie:", hasSelfie, "hasCarPhotos:", hasCarPhotos, "hasInteriorPhotos:", hasInteriorPhotos);
    
    if (isOwner) {
      console.log("üîç DEBUG: User is OWNER - checking photo requirements");
      // –î–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–µ–ª—Ñ–∏, –Ω–æ —Ç—Ä–µ–±—É–µ–º —Ñ–æ—Ç–æ –∫—É–∑–æ–≤–∞ –∏ —Å–∞–ª–æ–Ω–∞
      if (!hasCarPhotos || !hasInteriorPhotos) {
        console.log("üîç DEBUG: Owner - Need car or interior photos");
        if (!hasCarPhotos) {
          console.log("üîç DEBUG: Owner - Showing Step 1 (car photos)");
          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π –º–æ–¥–∞–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ –∫—É–∑–æ–≤–∞
          setShowOwnerUploadPhoto(true);
        } else if (hasCarPhotos && !hasInteriorPhotos) {
          console.log("üîç DEBUG: Owner - Showing Step 2 (interior photos)");
          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ç–æ—Ä–æ–π –º–æ–¥–∞–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ —Å–∞–ª–æ–Ω–∞
          setShowOwnerUploadPhotoStep2(true);
        }
      } else {
        console.log("üîç DEBUG: Owner - All required photos uploaded, starting rental");
        // –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã (–∫—É–∑–æ–≤ + —Å–∞–ª–æ–Ω), –æ—Ç–∫—Ä—ã–≤–∞–µ–º –∑–∞–º–∫–∏ –∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –¥–≤–∏–≥–∞—Ç–µ–ª—å
        await handleOpenCarAndUnlock();
      }
    } else {
      console.log("üîç DEBUG: User is REGULAR USER - checking all photo requirements");
      // –î–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
      if (!hasSelfie || !hasCarPhotos) {
        console.log("üîç DEBUG: Regular - Need selfie or car photos, showing Step 1");
        console.log("üîç DEBUG: Setting showUploadPhoto to true");
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π –º–æ–¥–∞–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ–ª—Ñ–∏ –∏ —Ñ–æ—Ç–æ –∫—É–∑–æ–≤–∞
        setShowUploadPhoto(true);
        console.log("üîç DEBUG: showUploadPhoto state set to:", true);
      } else if (hasSelfie && hasCarPhotos && !hasInteriorPhotos) {
        console.log("üîç DEBUG: Regular - Need interior photos, showing Step 2");
        console.log("üîç DEBUG: Setting showUploadPhotoStep2 to true");
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ç–æ—Ä–æ–π –º–æ–¥–∞–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ —Å–∞–ª–æ–Ω–∞
        setShowUploadPhotoStep2(true);
        console.log("üîç DEBUG: showUploadPhotoStep2 state set to:", true);
      } else {
        console.log("üîç DEBUG: Regular - All photos uploaded, starting rental");
        // –í—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –∑–∞–º–∫–∏ –∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –¥–≤–∏–≥–∞—Ç–µ–ª—å
        await handleOpenCarAndUnlock();
      }
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ –∞—Ä–µ–Ω–¥—ã, –æ—Ç–∫—Ä—ã—Ç–∏—è –∑–∞–º–∫–æ–≤ –∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –¥–≤–∏–≥–∞—Ç–µ–ª—è –∫–æ–≥–¥–∞ –≤—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
  async function handleOpenCarAndUnlock() {
    setIsLoading(true);
    
    try {
      // –°–Ω–∞—á–∞–ª–∞ –Ω–∞—á–∏–Ω–∞–µ–º –∞—Ä–µ–Ω–¥—É (–º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å —Å RESERVED –Ω–∞ IN_USE)
      await rentApi.startRent(car.id);
      
      // –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –Ω–∞—á–∞–ª–∞ –∞—Ä–µ–Ω–¥—ã –æ—Ç–∫—Ä—ã–≤–∞–µ–º –∑–∞–º–∫–∏
      // await vehicleActionsApi.openVehicle();
      
      
      setIsLoading(false);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –º–∞—à–∏–Ω –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –Ω–∞—á–∞–ª–∞ –∞—Ä–µ–Ω–¥—ã
      await Promise.all([refreshUser(), refreshVehiclesData()]);
      
      setResponseModal({
        isOpen: true,
        onClose: async () => {
          setResponseModal(null);
        },
        type: "success",
        description: "–ê—Ä–µ–Ω–¥–∞ –Ω–∞—á–∞—Ç–∞! –ó–∞–º–∫–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –æ—Ç–∫—Ä—ã—Ç—ã! –î–≤–∏–≥–∞—Ç–µ–ª—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–º.",
        buttonText: "–û—Ç–ª–∏—á–Ω–æ",
        onButtonClick: async () => {
          setResponseModal(null);
          // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∞–≤—Ç–æ–º–æ–±–∏–ª—è
          onClose();
        },
      });
    } catch (error) {
      setIsLoading(false);
      console.error("–û—à–∏–±–∫–∞ –Ω–∞—á–∞–ª–∞ –∞—Ä–µ–Ω–¥—ã –∏–ª–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è:", error);
      setResponseModal({
        isOpen: true,
        onClose: () => setResponseModal(null),
        type: "error",
        description: "–û—à–∏–±–∫–∞ –Ω–∞—á–∞–ª–∞ –∞—Ä–µ–Ω–¥—ã –∏–ª–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
        buttonText: "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞",
        onButtonClick: () => setResponseModal(null),
      });
    }
  }

  async function handleRent() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –ø–æ –Ω–æ–≤—ã–º –ø–æ–ª—è–º –∏–∑ API
    const hasSelfie = car.photo_before_selfie_uploaded || false;
    const hasCarPhotos = car.photo_before_car_uploaded || false;
    const hasInteriorPhotos = car.photo_before_interior_uploaded || false;
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
    const missingPhotos: string[] = [];
    if (!hasSelfie) missingPhotos.push("—Å–µ–ª—Ñ–∏");
    if (!hasCarPhotos) missingPhotos.push("—Ñ–æ—Ç–æ –∫—É–∑–æ–≤–∞");
    if (!hasInteriorPhotos) missingPhotos.push("—Ñ–æ—Ç–æ —Å–∞–ª–æ–Ω–∞");
    
    if (missingPhotos.length > 0) {
      // –ï—Å–ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª –∑–∞–≥—Ä—É–∑–∫–∏
      setResponseModal({
        isOpen: true,
        onClose: () => setResponseModal(null),
        type: "error",
        title: "–¢—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π",
        description: `–î–ª—è –Ω–∞—á–∞–ª–∞ –∞—Ä–µ–Ω–¥—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å: ${missingPhotos.join(", ")}. –≠—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è —Ñ–∏–∫—Å–∞—Ü–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è.`,
        buttonText: "–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏",
        onButtonClick: () => {
          setResponseModal(null);
          if (car.owned_car) {
            setShowOwnerUploadPhoto(true);
          } else {
            setShowUploadPhoto(true);
          }
        },
      });
      return;
    }

    try {
      const res = await rentApi.startRent(car.id);
      if (res.status === 200) {
        handleClose();
      }
    } catch (error) {
      setResponseModal({
        isOpen: true,
        onClose: handleClose,
        type: "error",
        title: t("error"),
        description: error.response.data.detail,
        buttonText: t("widgets.modals.user.carInWaiting.tryAgain"),
        onButtonClick: handleClose,
      });
    }
  }

  const handleCancelRental = async () => {
    try {
      const res = await rentApi.cancelReservation();
      if (res.status === 200) {
        setResponseModal({
          isOpen: true,
          onClose: async () => {
            await refreshUser();
            onClose();
            setResponseModal(null);
          },
          type: "success",
          description: t("widgets.modals.user.carInWaiting.rentalCancelledSuccessfully"),
          buttonText: t("widgets.modals.user.carInWaiting.tryAgain"),
          onButtonClick: async () => {
            await refreshUser();
            onClose();
            setResponseModal(null);
          },
        });
      }
    } catch (error) {
      setResponseModal({
        isOpen: true,
        onClose: async () => {
          await refreshUser();
          onClose();
          setResponseModal(null);
        },
        type: "error",
        title: t("error"),
        description: error.response.data.detail,
        buttonText: t("widgets.modals.user.carInWaiting.tryAgain"),
        onButtonClick: async () => {
          await refreshUser();
          onClose();
          setResponseModal(null);
        },
      });
    }
  };

  const handlePhotoUpload = async (files: { [key: string]: File[] }) => {
    setIsLoading(true);
    const formData = new FormData();
    for (const key in files) {
      for (const file of files[key]) {
        formData.append(key, file);
      }
    }
    try {
      const res = await rentApi.uploadBeforeRent(formData);
      if (res.status === 200) {
        setIsLoading(false);
        setShowUploadPhoto(false);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –º–∞—à–∏–Ω –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
        await Promise.all([refreshUser(), refreshVehiclesData()]);
        
        // –†–ê–ó–ë–õ–û–ö–ò–†–£–ï–ú –ó–ê–ú–ö–ò –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ–ª—Ñ–∏ –∏ —Ñ–æ—Ç–æ –∫—É–∑–æ–≤–∞
        try {
          
          setResponseModal({
            isOpen: true,
            onClose: () => {
              setShowUploadPhotoStep2(true);
              setResponseModal(null);
            },
            type: "success",
            description: "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã! –ó–∞–º–∫–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –æ—Ç–∫—Ä—ã—Ç—ã. –¢–µ–ø–µ—Ä—å —Å—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É–π—Ç–µ —Å–∞–ª–æ–Ω.",
            buttonText: "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å",
            onButtonClick: () => {
              setShowUploadPhotoStep2(true);
              setResponseModal(null);
            },
          });
        } catch (unlockError) {
          console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∑–∞–º–∫–æ–≤:", unlockError);
          setResponseModal({
            isOpen: true,
            onClose: () => {
              setShowUploadPhotoStep2(true);
              setResponseModal(null);
            },
            type: "success",
            description: "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã! –¢–µ–ø–µ—Ä—å —Å—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É–π—Ç–µ —Å–∞–ª–æ–Ω.",
            buttonText: "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å",
            onButtonClick: () => {
              setShowUploadPhotoStep2(true);
              setResponseModal(null);
            },
          });
        }
      }
    } catch (error) {
      setIsLoading(false);
      setResponseModal({
        isOpen: true,
        onClose: () => setResponseModal(null),
        type: "error",
        description: "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π",
        buttonText: "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞",
        onButtonClick: () => setResponseModal(null),
      });
    }
  };

  const handlePhotoUploadStep2 = async (files: { [key: string]: File[] }) => {
    setIsLoading(true);
    const formData = new FormData();
    for (const key in files) {
      for (const file of files[key]) {
        formData.append(key, file);
      }
    }
    try {
      const res = await rentApi.uploadBeforeRentInterior(formData);
      if (res.status === 200) {
        setIsLoading(false);
        setShowUploadPhotoStep2(false);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –º–∞—à–∏–Ω –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Å–∞–ª–æ–Ω–∞
        await Promise.all([refreshUser(), refreshVehiclesData()]);
        
        // –§–æ—Ç–æ —Å–∞–ª–æ–Ω–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ
        setResponseModal({
          isOpen: true,
          onClose: async () => {
            setResponseModal(null);
          },
          type: "success",
          description: "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å–∞–ª–æ–Ω–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!",
          buttonText: "–û—Ç–ª–∏—á–Ω–æ",
          onButtonClick: async () => {
            setResponseModal(null);
          },
        });
      }
    } catch (error) {
      setIsLoading(false);
      setResponseModal({
        isOpen: true,
        onClose: () => setResponseModal(null),
        type: "error",
        description: "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π",
        buttonText: "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞",
        onButtonClick: () => setResponseModal(null),
      });
    }
  };

  const handleOwnerPhotoUpload = async (files: { [key: string]: File[] }) => {
    setIsLoading(true);
    const formData = new FormData();
    for (const key in files) {
      for (const file of files[key]) {
        formData.append(key, file);
      }
    }
    try {
      const res = await rentApi.uploadOwnerBeforeRent(formData);
      if (res.status === 200) {
        setIsLoading(false);
        setShowOwnerUploadPhoto(false);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –º–∞—à–∏–Ω –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
        await Promise.all([refreshUser(), refreshVehiclesData()]);
        
        // –†–ê–ó–ë–õ–û–ö–ò–†–£–ï–ú –ó–ê–ú–ö–ò –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ –∫—É–∑–æ–≤–∞ (–¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞)
        try {
          
          setResponseModal({
            isOpen: true,
            onClose: () => {
              setShowOwnerUploadPhotoStep2(true);
              setResponseModal(null);
            },
            type: "success",
            description: "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã! –ó–∞–º–∫–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –æ—Ç–∫—Ä—ã—Ç—ã. –¢–µ–ø–µ—Ä—å —Å—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É–π—Ç–µ —Å–∞–ª–æ–Ω.",
            buttonText: "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å",
            onButtonClick: () => {
              setShowOwnerUploadPhotoStep2(true);
              setResponseModal(null);
            },
          });
        } catch (unlockError) {
          console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∑–∞–º–∫–æ–≤:", unlockError);
          setResponseModal({
            isOpen: true,
            onClose: () => {
              setShowOwnerUploadPhotoStep2(true);
              setResponseModal(null);
            },
            type: "success",
            description: "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã! –¢–µ–ø–µ—Ä—å —Å—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É–π—Ç–µ —Å–∞–ª–æ–Ω.",
            buttonText: "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å",
            onButtonClick: () => {
              setShowOwnerUploadPhotoStep2(true);
              setResponseModal(null);
            },
          });
        }
      }
    } catch (error) {
      setIsLoading(false);
      setResponseModal({
        isOpen: true,
        onClose: () => setResponseModal(null),
        type: "error",
        description: "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π",
        buttonText: "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞",
        onButtonClick: () => setResponseModal(null),
      });
    }
  };

  const handleOwnerPhotoUploadStep2 = async (files: { [key: string]: File[] }) => {
    setIsLoading(true);
    const formData = new FormData();
    for (const key in files) {
      for (const file of files[key]) {
        formData.append(key, file);
      }
    }
    try {
      const res = await rentApi.uploadOwnerBeforeRentInterior(formData);
      if (res.status === 200) {
        setIsLoading(false);
        setShowOwnerUploadPhotoStep2(false);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –º–∞—à–∏–Ω –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Å–∞–ª–æ–Ω–∞
        await Promise.all([refreshUser(), refreshVehiclesData()]);
        
        // –§–æ—Ç–æ —Å–∞–ª–æ–Ω–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ (–¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞)
        setResponseModal({
          isOpen: true,
          onClose: async () => {
            setResponseModal(null);
          },
          type: "success",
          description: "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å–∞–ª–æ–Ω–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!",
          buttonText: "–û—Ç–ª–∏—á–Ω–æ",
          onButtonClick: async () => {
            setResponseModal(null);
          },
        });
      }
    } catch (error) {
      setIsLoading(false);
      setResponseModal({
        isOpen: true,
        onClose: () => setResponseModal(null),
        type: "error",
        description: "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π",
        buttonText: "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞",
        onButtonClick: () => setResponseModal(null),
      });
    }
  };

  return (
    <div className="bg-white rounded-t-[24px] w-full mb-0 relative">
      <CustomResponseModal
        onButtonClick={responseModal?.onButtonClick || handleClose}
        isOpen={!!responseModal}
        onClose={handleClose}
        title={responseModal?.title || ""}
        description={responseModal?.description || ""}
        buttonText={responseModal?.buttonText || ""}
      />
      {/* User Upload Photo Step 1 */}
      <UploadPhoto
        config={userConfigStep1}
        onPhotoUpload={handlePhotoUpload}
        isOpen={showUploadPhoto}
        isLoading={isLoading}
        onClose={() => setShowUploadPhoto(false)}
        isCloseable={true}
        {...({
          photoBeforeSelfieUploaded: car.photo_before_selfie_uploaded,
          photoBeforeCarUploaded: car.photo_before_car_uploaded,
          photoBeforeInteriorUploaded: car.photo_before_interior_uploaded,
        } as any)}
      />

      {/* User Upload Photo Step 2 */}
      <UploadPhoto
        config={userConfigStep2}
        onPhotoUpload={handlePhotoUploadStep2}
        isOpen={showUploadPhotoStep2}
        isLoading={isLoading}
        onClose={() => setShowUploadPhotoStep2(false)}
        isCloseable={true}
        {...({
          photoBeforeSelfieUploaded: car.photo_before_selfie_uploaded,
          photoBeforeCarUploaded: car.photo_before_car_uploaded,
          photoBeforeInteriorUploaded: car.photo_before_interior_uploaded,
        } as any)}
      />

      {/* Owner Upload Photo Step 1 */}
      <UploadPhoto
        config={ownerConfigStep1}
        onPhotoUpload={handleOwnerPhotoUpload}
        isOpen={showOwnerUploadPhoto}
        isLoading={isLoading}
        onClose={() => setShowOwnerUploadPhoto(false)}
        isCloseable={true}
        {...({
          photoBeforeSelfieUploaded: car.photo_before_selfie_uploaded,
          photoBeforeCarUploaded: car.photo_before_car_uploaded,
          photoBeforeInteriorUploaded: car.photo_before_interior_uploaded,
        } as any)}
      />

      {/* Owner Upload Photo Step 2 */}
      <UploadPhoto
        config={ownerConfigStep2}
        onPhotoUpload={handleOwnerPhotoUploadStep2}
        isOpen={showOwnerUploadPhotoStep2}
        isLoading={isLoading}
        onClose={() => setShowOwnerUploadPhotoStep2(false)}
        isCloseable={true}
        {...({
          photoBeforeSelfieUploaded: car.photo_before_selfie_uploaded,
          photoBeforeCarUploaded: car.photo_before_car_uploaded,
          photoBeforeInteriorUploaded: car.photo_before_interior_uploaded,
        } as any)}
      />

      {/* –¢–∞–π–º–µ—Ä –æ–∂–∏–¥–∞–Ω–∏—è */}
      <div className="absolute -top-16 right-4 left-4 z-10">
        <WaitingTimer user={user} />
      </div>

      {/* Car Image Carousel */}
      <CarImageCarousel car={car} rounded={true} />

      {/* Content */}
      <div className="p-6 pt-4 space-y-6">
        {/* Car Title and Plate */}
        <CarInfoHeader car={car} />

        {/* Car Specs */}
        <CarSpecs car={car} />

        <div>
          <h4 className="text-[20px] font-semibold text-[#191919]">
            {t("widgets.modals.carInWaiting.inspectCar")}
          </h4>
          <h4 className="text-[18px] text-[#191919]">
            {t("widgets.modals.carInWaiting.inspectCarDescription")}
          </h4>
        </div>

        {/* Action Buttons */}
        <div className="space-y-3">
          <Button variant="outline" onClick={handleCancelRental}>
            {t("widgets.modals.carInWaiting.cancelRental")}
          </Button>
          <Button onClick={handleOpenCar} variant="secondary">
            {(() => {
              const isOwner = car.owner_id === user.id;
              const hasSelfie = car.photo_before_selfie_uploaded || false;
              const hasCarPhotos = car.photo_before_car_uploaded || false;
              const hasInteriorPhotos = car.photo_before_interior_uploaded || false;
              
              if (isOwner) {
                // –õ–æ–≥–∏–∫–∞ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞
                if (!hasCarPhotos) {
                  return "–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ –∫—É–∑–æ–≤–∞";
                } else if (hasCarPhotos && !hasInteriorPhotos) {
                  return "–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ —Å–∞–ª–æ–Ω–∞";
                } else {
                  return "–ù–∞—á–∞—Ç—å –∞—Ä–µ–Ω–¥—É";
                }
              } else {
                // –õ–æ–≥–∏–∫–∞ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                if (!hasSelfie || !hasCarPhotos) {
                  return "–ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–µ–ª—Ñ–∏ –∏ —Ñ–æ—Ç–æ –∫—É–∑–æ–≤–∞";
                } else if (hasSelfie && hasCarPhotos && !hasInteriorPhotos) {
                  return "–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ —Å–∞–ª–æ–Ω–∞";
                } else {
                  return "–ù–∞—á–∞—Ç—å –∞—Ä–µ–Ω–¥—É";
                }
              }
            })()}
          </Button>
        </div>

        <div className=" flex flex-row gap-2">
          <InfoIcon />
          <p className="text-[14px] text-[#191919]">
            {t("widgets.modals.carInWaiting.openCarConfirms")}
          </p>
        </div>
      </div>
    </div>
  );
};
